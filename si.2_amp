#!/bin/bash
# 
### PART 1: BASIC CONFIG =======================================================

# Configure iptables
#sudo /sbin/iptables -L
# while [ -n "$ANS" ]; do
# 	read -p "Do you want to automatically configure your iptables? [y/n]" -e ANS
# 	if [[ "$ANS"=='y' || "$ANS"=='Y' ]]; then
# 		sudo /sbin/iptables -I INPUT -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT;
# 		sudo /sbin/iptables -I OUTPUT -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT;
# 		sudo /sbin/iptables -I INPUT -p tcp --dport 443 -m state --state NEW,ESTABLISHED -j ACCEPT;
# 		sudo /sbin/iptables -I OUTPUT -p tcp --sport 443 -m state --state ESTABLISHED -j ACCEPT;
# 	fi
# done

# Install apache2
sudo aptitude update -y
sudo aptitude install -y apache2
echo -e "\nApache2 installed"

# Install mysql
sudo aptitude install -y mysql-server
mysql_secure_installation
echo -e "\nMySQL installed"

# Install php
sudo aptitude install -y php5 php5-mysql php5-dev php5-curl php5-gd php5-imagick php5-mcrypt php5-memcache php5-mhash php5-pspell php5-snmp php5-sqlite php5-xmlrpc php-pear phpmyadmin php5-mysql
echo -e "\nPHP installed"

# Configure phpMyAdmin
sudo ln -s /usr/shared/phpmyadmin /var/www/phpmyadmin
sudo cp /usr/share/phpmyadmin/libraries/{config.default.php,config.inc.php}
read -p "Do you want to change the phpMyAdmin configuration file? [y/N] "
if [[ "$REPLY" == "y" || "$REPLY" == "Y" ]]; then
	sudo vim /usr/share/phpmyadmin/libraries/config.inc.php
fi
wget http://$(hostname -I)/phpmyadmin -O /dev/null
if [ $? -eq 0 ]; then
	echo "Well done, phpMyAdmin is installed! (tested at http://$(hostname -I)/phpmyadmin)"
else
	echo "Oh snap, something went wrong while configuring phpMyAdmin!"
fi

# Restart apache
sudo /usr/sbin/apache2ctl graceful

# Server name
read -p "Enter the name for your server (something like demo.example.com): " -e SN
echo -e "\nServerName $SN\n" > /tmp/ninjadmin
sudo mv /tmp/ninjadmin /etc/apache2/conf.d/servername.conf

# Graceful restart
sudo /usr/sbin/apache2ctl graceful

# Test with wget
echo
echo "Apache2 server should now be working. Testing with wget."
wget http://$(hostname -I) -O - > /dev/null
if [ $? -eq 0 ]; then
	echo "Well done, Apache 2 server installed! (tested at http://$(hostname -I))"
else
	echo "Oh snap, something went wrong while configuring Apache2!"
fi

# read -p "Do you want to disable the default virtual host? [y/N] "
# if [[ "$REPLY" == "y" || "$REPLY" == "Y" ]]; then
# 	# disable default vh
# fi


### PART 2: EFFICIENCY AND SECURITY ============================================

grep "AccessFileName .htaccess" /etc/apache2/apache2.conf > /dev/null
if [ $? -ne 0 ];
	then echo -e "\nAccessFileName .htaccess" | sudo tee -a /etc/apache2/apache2.conf > /dev/null
fi

grep "ErrorLog /var/log/apache2/error.log" /etc/apache2/apache2.conf > /dev/null
if [ $? -ne 0 ];
	then echo -e "\nErrorLog /var/log/apache2/error.log" | sudo tee -a /etc/apache2/apache2.conf > /dev/null
fi

grep "ServerTokens Prod" /etc/apache2/conf.d/security > /dev/null
if [ $? -ne 0 ];
	then echo -e "\nServerTokens Prod" | sudo tee -a /etc/apache2/conf.d/security > /dev/null
fi

grep "ServerSignature On" /etc/apache2/conf.d/security > /dev/null
if [ $? -ne 0 ];
	then echo -e "\nServerSignature On" | sudo tee -a /etc/apache2/conf.d/security  > /dev/null
fi


