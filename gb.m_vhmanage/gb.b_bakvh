#!/bin/bash
# Create backup archive from a given vh

# List available sites
echo "You currently have this sites on your sites-available directory:"
ls -1 /etc/apache2/sites-available | nl | perl -plne 's/\s+(\d+)\s+/ [$1] /g'
read -p "Which one do you want to backup? [0 to quit] " -e NUMBER
while ! [[ "$NUMBER" =~ ^[0-9]+$ ]]; do
	echo "$NUMBER is not a valid number."
	ls -1 /etc/apache2/sites-available | nl | perl -plne 's/\s+(\d+)\s+/ [$1] /g'
	read -p "Please enter the number of the site you want to backup: [0 to quit] " -e NUMBER
done
if [ "$NUMBER" == "0" ]; then
	echo "Operation canceled."
	exit 0
fi

# Get database access data
SITE=$(ls -1 /etc/apache2/sites-available | head -$NUMBER | tail -1)
echo "Backing up site $SITE."
if [ -e $HOME/public_html/$SITE/site_files/config/database.yml ]; then
	DBUSER=$(grep "username:" $HOME/public_html/$SITE/site_files/config/database.yml | sed 's/^.*\s*:\s*//')
	DBNAME=$(grep "database:" $HOME/public_html/$SITE/site_files/config/database.yml | sed 's/^.*\s*:\s*//')
	DBPASS=$(grep "password:" $HOME/public_html/$SITE/site_files/config/database.yml | sed 's/^.*\s*:\s*//')
else
	echo "Could not find database.yml file in $SITE folders."
fi

# Change to backups folder and create new folder
mkdir -p $HOME/backups/$SITE 
cd $HOME/backups/$SITE 
BAKFOLDER=$SITE.bak.$(date +%Y%m%d_%H%M)
mkdir -p "$BAKFOLDER"

# Dump database to .sql.gz file
echo "Dumping database $DBNAME to file."
mysqldump --add-drop-database --add-drop-table -u $DBUSER -p$DBPASS $DBNAME | gzip -9 -c > $BAKFOLDER/$DBNAME.sql.gz 

# Create archive from site_files/system
if [ -e $HOME/public_html/$SITE/site_files/system ]; then
	echo "Copying and compressing $SITE/site_files/system folder."
	cd "$HOME/public_html/$SITE/site_files"
	tar cvzf $BAKFOLDER/system.tar.gz system
	cd -
fi

# Create archive from site_files/assets
if [ -e $HOME/public_html/$SITE/site_files/assets ]; then
	echo "Copying and compressing $SITE/site_files/assets folder."
	cd "$HOME/public_html/$SITE/site_files"
	tar cvzf $BAKFOLDER/assets.tar.gz assets
	cd -
fi

# Create archive from site_files/vendor
if [ -e $HOME/public_html/$SITE/site_files/vendor ]; then
	echo "Copying and compressing $SITE/site_files/vendor folder."
	cd "$HOME/public_html/$SITE/site_files"
	tar cvzf $BAKFOLDER/vendor.tar.gz vendor
	cd -
fi

# Create archive from site_files/public
if [ -e $HOME/public_html/$SITE/site_files/public ]; then
	echo "Copying and compressing $SITE/site_files/public folder."
	cd "$HOME/public_html/$SITE/site_files"
	tar cvzf $BAKFOLDER/public.tar.gz public
	cd -
fi

# Create final tar file
cd $HOME/backups/$SITE 
tar cvf $BAKFOLDER.tar $BAKFOLDER/*
if [ $? -ne 0 ]; then
	echo "Could not create final compressed file. Will not remove folder $BAKFOLDER"
else
	rm -r $BAKFOLDER
	echo "Backup file for site $SITE saved as $BAKFOLDER.tar"
fi

# Also create folder with date and put inside links to backups from this day
TODAYDIR="$HOME/backups/$(date +%Y%m%d)"
mkdir -p "$TODAYDIR"
cd "$TODAYDIR"
ln -s ../"$SITE"/"$BAKFOLDER".tar .
cd

exit 0
