#!/bin/bash

# Function which finds if there is an updated config.yml for a given site
changed () {
	gitf="$1"
	localf="$2"
	if ! [ -e "$localf" ]; then
		echo 1;
		return 1;
	elif [ "$gitf" -nt "$localf" ]; then
		echo 1;
		return 1;
	else
		return 0;
	fi
}

# Find out site corresponding to current directory (if any)
CURSITE=$("$GBSYSMENUPATH/gb.a_location")

# Config files repository directory
if [ -z "$HANDYANTCONFIGDIR" ]; then
	HANDYANTCONFIGDIR='/home/hokage/gb-instancies'
fi

# Pull new commits
cd "$HANDYANTCONFIGDIR"
#git pull
cd -


# Check which ones are new (except current)
for gitf in $(ls -1 "$HANDYANTCONFIGDIR"/*.yml); do
	[ "$site" == "$CURSITE" ] && continue
	site=$(basename $gitf)
	site=${site/.yml/}
	localf="$HOME/public_html/$site/site_files/config/config.yml"

	if [ $(changed "$gitf" "$localf") ]; then
		chgdlist=(${chgdlist[@]-} "$site")
	fi
done

# Get list with all (except current)
for gitf in $(ls -1 "$HANDYANTCONFIGDIR"/*.yml); do
	[ "$site" == "$CURSITE" ] && continue
	site=$(basename $gitf)
	site=${site/.yml/}
	localf="$HOME/public_html/$site/site_files/config/config.yml"
	alllist=(${alllist[@]-} "$site")
done


update_changed() {
	# Repeat until valid choice
	CHOICE="NO"
	while [ "$CHOICE" == "NO" ]; do
	    # If $CURSITE is defined, present it at the top of the list
	    if [[ -n "$CURSITE" && $(changed "$HANDYANTCONFIGDIR/$CURSITE.yml" "$HOME/public_html/$CURSITE/site_files/config/config.yml") ]]; then
	        # Print the list of sites with updates
	        for SITE in "${chgdlist[@]}"; do echo $SITE; done |\
	             nl |\
	             perl -plne 's/^\s+(\d+)\s+/ [$1]\t/g' |\
	             cat <(echo -e "[Enter] $CURSITE\n") - |\
	             cat - <(echo ""; echo "[A] All_with_updates"; echo "[F] See_all_sites"; echo "[X] Cancel") |\
	             column -t
		else
	        # Print the list of sites with updates
	        for SITE in "${chgdlist[@]}"; do echo $SITE; done |\
	             nl |\
	             perl -plne 's/^\s+(\d+)\s+/ [$1]\t/g' |\
	             cat - <(echo ""; echo "[A] All";  echo "[X] Cancel") |\
	             column -t
	    fi
	    read -p "Choose a site to update: " -e NUMBER
	
	    case $NUMBER in
	    X|x) # Cancel and exit
	        exit 1
	        ;;  
	    [0-9]|[0-9][0-9]) # Number with one or two digits. 
	        if [ -z "$CURSITE" ]; then
	            SITE=$(ls -1 "$HANDYANTCONFIGDIR"/*.yml | head -$NUMBER | tail -1)
	        else
	            CURSITE=$("$GBSYSMENUPATH/gb.a_location")
	            SITE=$(ls -1 "$HANDYANTCONFIGDIR"/*.yml | grep -v "$CURSITE" | head -$NUMBER | tail -1)
	        fi  
			echo "Updating config file from '$SITE'"
	        CHOICE='YES'
	        ;; 
	    A|a) # Update all sites with changed config files
	        for SITE in "${chgdlist[@]}"; do
				echo "Updating config file from '$SITE'"
	        done
	        CHOICE='YES'
	        ;; 
		F|f) # See all sites
			update_all
			# for SITE in $(ls -1 "$HANDYANTCONFIGDIR"/*.yml); do
			# 	SITE=${SITE/.yml/}
			# 	SITE=$(basename $SITE)
			# 	echo "Updating config file from '$SITE'"
	        # done
	        CHOICE='YES'
	        ;;
	    '') 
	        if [ -z "$CURSITE" ]; then
	            echo "Undefined option!"
	            CHOICE='NO'
	        else
	            CURSITE=$("$GBSYSMENUPATH/gb.a_location")
				echo "Updating config file from '$CURSITE'"
	            CHOICE='YES'
	        fi
	        ;;
	    *)
	        echo "Undefined option '$NUMBER'!"
	        CHOICE='NO'
	        ;;
	    esac
	done
}

update_all() {
	# Repeat until valid choice
	CHOICE="NO"
	while [ "$CHOICE" == "NO" ]; do
	    # If $CURSITE is defined, present it at the top of the list
	    if [[ -n "$CURSITE" && $(changed "$HANDYANTCONFIGDIR/$CURSITE.yml" "$HOME/public_html/$CURSITE/site_files/config/config.yml") ]]; then
	        # Print the list of sites with updates
	        for SITE in "${alllist[@]}"; do echo $SITE; done |\
	             nl |\
	             perl -plne 's/^\s+(\d+)\s+/ [$1]\t/g' |\
	             cat <(echo -e "[Enter] $CURSITE\n") - |\
	             cat - <(echo ""; echo "[A] All_with_updates"; echo "[F] See_only_the_new_ones"; echo "[X] Cancel") |\
	             column -t
		else
	        # Print the list of sites with updates
	        for SITE in "${alllist[@]}"; do echo $SITE; done |\
	             nl |\
	             perl -plne 's/^\s+(\d+)\s+/ [$1]\t/g' |\
	             cat - <(echo ""; echo "[A] All";  echo "[X] Cancel") |\
	             column -t
	    fi
	    read -p "Choose a site to update: " -e NUMBER
	
	    case $NUMBER in
	    X|x) # Cancel and exit
	        exit 1
	        ;;  
	    [0-9]|[0-9][0-9]) # Number with one or two digits. 
	        if [ -z "$CURSITE" ]; then
	            SITE=$(ls -1 "$HANDYANTCONFIGDIR"/*.yml | head -$NUMBER | tail -1)
	        else
	            CURSITE=$("$GBSYSMENUPATH/gb.a_location")
	            SITE=$(ls -1 "$HANDYANTCONFIGDIR"/*.yml | grep -v "$CURSITE" | head -$NUMBER | tail -1)
	        fi  
			echo "Updating config file from '$SITE'"
	        CHOICE='YES'
	        ;; 
	    A|a) # Update all sites in this list
	        for SITE in "${alllist[@]}"; do
				echo "Updating config file from '$SITE'"
	        done
	        CHOICE='YES'
	        ;; 
		U|u) # Update sites with changed config files
			update_new
			# for SITE in $(ls -1 "$HANDYANTCONFIGDIR"/*.yml); do
			# 	SITE=${SITE/.yml/}
			# 	SITE=$(basename $SITE)
			# 	echo "Updating config file from '$SITE'"
	        # done
	        CHOICE='YES'
	        ;;
	    '') 
	        if [ -z "$CURSITE" ]; then
	            echo "Undefined option!"
	            CHOICE='NO'
	        else
	            CURSITE=$("$GBSYSMENUPATH/gb.a_location")
				echo "Updating config file from '$CURSITE'"
	            CHOICE='YES'
	        fi
	        ;;
	    *)
	        echo "Undefined option '$NUMBER'!"
	        CHOICE='NO'
	        ;;
	    esac
	done
}


