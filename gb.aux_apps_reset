# Function which finds if there is an updated config.yml for a given site


update_changed() {
echo
echo "The config files for these sites have changed. Which one do you want to update? [Cancel] "
echo
	# Repeat until valid choice
	CHOICE="NO"
	while [ "$CHOICE" == "NO" ]; do
	    # If $CURSITE is defined, present it at the top of the list
	    if [[ -n "$CURSITE" && $(changed "$HANDYANTCONFIGDIR/$CURSITE.yml" "$HOME/public_html/$CURSITE/site_files/config/config.yml") ]]; then
	        # Print the list of sites with updates
	        for SITE in "${chgdlist[@]}"; do echo $SITE; done |\
	             nl |\
	             perl -plne 's/^\s+(\d+)\s+/ [$1]\t/g' |\
	             cat <(echo -e "[Enter] $CURSITE\n") - |\
	             cat - <(echo ""; echo "[A] All_in_this_list"; echo "[F] See_all_sites"; echo "[X] Cancel") |\
	             column -t
		else
	        # Print the list of sites with updates
	        for SITE in "${chgdlist[@]}"; do echo $SITE; done |\
	             nl |\
	             perl -plne 's/^\s+(\d+)\s+/ [$1]\t/g' |\
	             cat - <(echo ""; echo "[A] All_in_this_list"; echo "[F] See_all_sites"; echo "[X] Cancel") |\
	             column -t
	    fi
	    read -p "Choose a site to update: " -e NUMBER
	
	    case $NUMBER in
	    X|x) # Cancel and exit
	        exit 1
	        ;;  
	    [0-9]|[0-9][0-9]) # Number with one or two digits. 
	        if [ -z "$CURSITE" ]; then
	            SITE=$(ls -1 "$HANDYANTCONFIGDIR"/*.yml | head -$NUMBER | tail -1)
	        else
	            CURSITE=$("$GBSYSMENUPATH/gb.a_location")
	            SITE=$(ls -1 "$HANDYANTCONFIGDIR"/*.yml | grep -v "$CURSITE" | head -$NUMBER | tail -1)
	        fi  
		    SITE=$(basename $SITE)
		    SITE=${SITE/.yml/}

			update_config "$SITE"
			#echo "Updating config file from '$SITE'"
	        CHOICE='YES'
	        ;; 
	    A|a) # Update all sites in this list
	        for SITE in "${chgdlist[@]}"; do
				update_config "$SITE"
				# echo "Updating config file from '$SITE'"
	        done
	        CHOICE='YES'
	        ;; 
		F|f) # See all sites
			update_all
			# for SITE in $(ls -1 "$HANDYANTCONFIGDIR"/*.yml); do
			# 	SITE=${SITE/.yml/}
			# 	SITE=$(basename $SITE)
			# 	echo "Updating config file from '$SITE'"
	        # done
	        CHOICE='YES'
	        ;;
	    '') 
	        if [ -z "$CURSITE" ]; then
	            echo "Undefined option!"
	            CHOICE='NO'
	        else
	            CURSITE=$("$GBSYSMENUPATH/gb.a_location")
				update_config "$CURSITE"
				# echo "Updating config file from '$CURSITE'"
	            CHOICE='YES'
	        fi
	        ;;
	    *)
	        echo "Undefined option '$NUMBER'!"
	        CHOICE='NO'
	        ;;
	    esac
	done
}

update_all() {
echo
echo "These are all the sites in your public_html dir. Which one do you want to update? [Cancel] "
echo
	# Repeat until valid choice
	CHOICE="NO"
	while [ "$CHOICE" == "NO" ]; do
	    # If $CURSITE is defined, present it at the top of the list
	    if [ -n "$CURSITE" ]; then
	        # Print the list of sites with updates
	        for SITE in "${alllist[@]}"; do echo $SITE; done |\
	             nl |\
	             perl -plne 's/^\s+(\d+)\s+/ [$1]\t/g' |\
	             cat <(echo -e "[Enter] $CURSITE\n") - |\
	             cat - <(echo ""; echo "[A] All_in_this_list"; echo "[F] See_only_the_new_ones"; echo "[X] Cancel") |\
	             column -t
		else
	        # Print the list of sites with updates
	        for SITE in "${alllist[@]}"; do echo $SITE; done |\
	             nl |\
	             perl -plne 's/^\s+(\d+)\s+/ [$1]\t/g' |\
	             cat - <(echo ""; echo "[A] All_in_this_list"; echo "[F] See_only_the_new_ones"; echo "[X] Cancel") |\
	             column -t
	    fi
	    read -p "Choose a site to update: " -e NUMBER
	
	    case $NUMBER in
	    X|x) # Cancel and exit
	        exit 1
	        ;;  
	    [0-9]|[0-9][0-9]) # Number with one or two digits. 
	        if [ -z "$CURSITE" ]; then
	            SITE=$(ls -1 "$HANDYANTCONFIGDIR"/*.yml | head -$NUMBER | tail -1)
	        else
	            CURSITE=$("$GBSYSMENUPATH/gb.a_location")
	            SITE=$(ls -1 "$HANDYANTCONFIGDIR"/*.yml | grep -v "$CURSITE" | head -$NUMBER | tail -1)
	        fi  
		    SITE=$(basename $SITE)
		    SITE=${SITE/.yml/}
			update_config "$SITE"
			# echo "Updating config file from '$SITE'"
	        CHOICE='YES'
	        ;; 
	    A|a) # Update all sites in this list
	        for SITE in "${alllist[@]}"; do
				update_config "$SITE"
				# echo "Updating config file from '$SITE'"
	        done
	        CHOICE='YES'
	        ;; 
		F|f) # Update sites with changed config files
			update_changed
			# for SITE in $(ls -1 "$HANDYANTCONFIGDIR"/*.yml); do
			# 	SITE=${SITE/.yml/}
			# 	SITE=$(basename $SITE)
			# 	echo "Updating config file from '$SITE'"
	        # done
	        CHOICE='YES'
	        ;;
	    '') 
	        if [ -z "$CURSITE" ]; then
	            echo "Undefined option!"
	            CHOICE='NO'
	        else
	            CURSITE=$("$GBSYSMENUPATH/gb.a_location")
				update_config "$CURSITE"
				# echo "Updating config file from '$CURSITE'"
	            CHOICE='YES'
	        fi
	        ;;
	    *)
	        echo "Undefined option '$NUMBER'!"
	        CHOICE='NO'
	        ;;
	    esac
	done
}

update_config () {
	SITE="$1"
	cp "$HANDYANTCONFIGDIR/$SITE.yml" "$GBSITESDIR/$SITE/site_files/config/config.yml"
	if [ $? ]; then
		echo "Could not copy '$HANDYANTCONFIGDIR/$SITE.yml' to '$GBSITESDIR/$SITE/config/config.yml'"
	else
		echo "Copied '$HANDYANTCONFIGDIR/$SITE.yml' to '$GBSITESDIR/$SITE/config/config.yml'"
	fi
}
